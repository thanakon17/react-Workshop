// src/TodoItem.jsx
import React, { useState, useContext } from 'react';
import { TodoContext } from './contexts/TodoContext';

function TodoItem({ todo }) { // üîΩ ‡∏£‡∏±‡∏ö‡πÅ‡∏Ñ‡πà todo ‡∏Å‡πá‡∏û‡∏≠
  const { deleteTodo, toggleTodo, editTodo } = useContext(TodoContext); // üîΩ ‡∏î‡∏∂‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏°‡∏≤‡∏à‡∏≤‡∏Å context
  const [isEditing, setIsEditing] = useState(false);
  const [newText, setNewText] = useState(todo.text);

  const handleSave = () => {
    if (newText.trim()) {
      editTodo(todo.id, newText);
      setIsEditing(false);
    }
  };

  // ... (‡∏™‡πà‡∏ß‡∏ô JSX ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£)
  return (
     <li className={`todo-item ${todo.completed ? 'completed' : ''}`}>
      {isEditing ? (
        <input
          type="text"
          value={newText}
          onChange={(e) => setNewText(e.target.value)}
          onBlur={handleSave}
          onKeyPress={(e) => e.key === 'Enter' && handleSave()}
          autoFocus
        />
      ) : (
        <span onClick={() => toggleTodo(todo.id)}>
          {todo.text}
        </span>
      )}
      <div>
        {isEditing ? (
          <button onClick={handleSave} className="save-btn">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
        ) : (
          <button onClick={() => setIsEditing(true)} className="edit-btn">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
        )}
        <button onClick={() => deleteTodo(todo.id)}>‡∏•‡∏ö</button>
      </div>
    </li>
  );
}

export default TodoItem;